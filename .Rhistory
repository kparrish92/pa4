View(fricatives)
View(fricatives_tidy)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(readr)
library(openintro)
library(dplyr)
library(ggplot2)
library(e1071)
library(tidyverse)
fricatives <- read_csv("data_raw/fricatives.csv")
hist(fricatives$s_cog)
hist(fricatives$sh_cog)
hist(fricatives$s_skewness)
hist(fricatives$sh_skewness)
skewness(fricatives$s_cog)
skewness(fricatives$s_skewness)
skewness(fricatives$sh_cog)
skewness(fricatives$sh_skewness)
ggplot(data = fricatives, aes(x = s_cog, y = s_skewness)) + geom_point()
fricatives_tidy = fricatives %>%
pivot_longer(c(`s_cog`, `s_skewness`,`sh_cog`, `sh_skewness`), names_to = "type", values_to = "value") %>%
separate(type, into = c("phoneme", "measure"), sep = "_") %>%
pivot_wider(names_from = measure, values_from = value)
fricatives_tidy %>%
write.csv("./data_tidy/fricatives_tidy")
fricatives_desc = fricatives %>%
pivot_longer(c(`s_cog`, `s_skewness`,`sh_cog`, `sh_skewness`), names_to = "type", values_to = "value") %>%
separate(type, into = c("phoneme", "measure"), sep = "_") %>%
group_by(phoneme, measure) %>%
summarise(mean = mean(value), sd = sd(value))
fricatives_desc %>%
write.csv("./data_tidy/fricatives_desc")
knitr::kable(fricatives_desc, digits = 3)
```
fricatives_zscores = fricatives_tidy %>%
group_by(phoneme) %>%
mutate(z_score_group_cog = (cog - mean(cog)) / sd(cog)) %>%
mutate(z_score_group_skew = (skewness - mean(skewness)) / sd(skewness)) %>%
ungroup %>%
mutate(z_score_ungrouped_cog = (cog - mean(cog)) / sd(cog)) %>%
mutate(z_score_ungrouped_skew = (skewness - mean(skewness)) / sd(skewness))
fricatives_tidy %>%
ggplot(., aes(x = phoneme, y = cog)) + geom_boxplot() + xlab("Center of Gravity")
fricatives_zscores %>%
ggplot(., aes(x = phoneme, y = z_score_ungrouped_skew)) + stat_summary(fun = mean, fun.min = function(z_score_ungrouped_skew) mean(z_score_ungrouped_skew) - sd(z_score_ungrouped_skew), fun.max = function(z_score_ungrouped_skew) mean(z_score_ungrouped_skew) + sd(z_score_ungrouped_skew))
fricatives_zscores %>%
ggplot(., aes(x = phoneme, y = z_score_ungrouped_skew)) + stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3, color = "seagreen")
```
fricatives_zscores %>%
ggplot(., aes(x = phoneme, y = z_score_ungrouped_skew)) + stat_summary(fun = mean, fun.min = function(z_score_ungrouped_skew) mean(z_score_ungrouped_skew) - sd(z_score_ungrouped_skew), fun.max = function(z_score_ungrouped_skew) mean(z_score_ungrouped_skew) + sd(z_score_ungrouped_skew))
fricatives_zscores %>%
ggplot(., aes(x = phoneme, y = z_score_ungrouped_skew)) + stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3, color = "seagreen")
```
model = lm(fricatives_zscores$z_score_ungrouped_cog ~ fricatives_zscores$z_score_ungrouped_skew * fricatives_zscores$phoneme)
summary(model)
mean(model$residuals)
mean(model$residuals)
ols_plot_resid_fit(model)
summary(model)
mean(model$residuals)
summary(model$residuals)
plot(model)
autoplot(model
)
autoplot(model)
plot(model)
gvlma::gvlma(mod1)
gvlma::gvlma(model)
View(fricatives)
View(fricatives_zscores)
skewness(fricatives$s_cog)
skewness(fricatives$s_skewness)
skewness(fricatives$sh_cog)
skewness(fricatives$sh_skewness)
View(fricatives_tidy)
fricatives_log = fricatives_tidy %>%
group_by(phoneme) %>%
mutate(log_cog = log(cog))
View(fricatives_log)
View(fricatives_tidy)
model2 = lm(fricatives_tidy$cog ~ fricatives$skewness * fricatives$phoneme
model2 = lm(fricatives_tidy$cog ~ fricatives$skewness * fricatives$phoneme
model2 = lm(fricatives_tidy$cog ~ fricatives$skewness * fricatives$phoneme)
model2 = lm(fricatives_tidy$cog ~ fricatives_tidy$skewness * fricatives_tidy$phoneme)
summary(model2)
gvlma::gvlma(model2)
View(fricatives_log)
model2 = lm(fricatives_log$log_cog ~ fricatives_tidy$skewness * fricatives_tidy$phoneme)
summary(model)
summary(model2)
gvlma::gvlma(model2)
fricatives_s = fricatives_tidy %>%
filter(phoneme == "s")
model2 = lm(fricatives_s$cog ~ fricatives_s$skewness)
summary(model)
summary(model2)
gvlma::gvlma(model2)
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog) + geom_point()
fricatives_log %>%
View(fricatives_log)
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog)
+ geom_point()
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog)
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog))
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog)) + geom_point()
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog, color = phoneme)) + geom_point()
hist(fricatives_s$cog)
View(fricatives_log)
s_ log = fricatives_log %>%
s_log = fricatives_log %>%
filter(phoneme == "s")
s_log = fricatives_log %>%
filter(phoneme == "s")
hist(s_log$log_cog)
hist(fricatives_s$cog)
cooks.distance(model2)
x = cooks.distance(model2)
plot(x)
library(readr)
library(openintro)
library(dplyr)
library(ggplot2)
library(tidyverse)
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog, color = phoneme)) + geom_point()
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog, color = phoneme)) + geom_point()
library(readr)
library(openintro)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(e1071)
fricatives_log %>%
ggplot(., aes(x = skewness, y = cog, color = phoneme)) + geom_point()
fricatives_tidy %>%
ggplot(., aes(x = phoneme, y = z_score_ungrouped_skew)) + stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3, color = "seagreen")
fricatives_tidy %>%
ggplot(., aes(x = phoneme, y = z_score_ungrouped_skew)) + stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3, color = "seagreen")
fricatives_tidy %>%
ggplot(., aes(x = phoneme, y = z_score_ungrouped_skew)) + stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3, color = "seagreen")
View(fricatives_tidy)
fricatives_tidy %>%
ggplot(., aes(x = phoneme, y = skewness)) + stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3, color = "seagreen")
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
y = remove_outliers(fricatives)
View(fricatives)
y = remove_outliers(fricatives_tidy$cog)
data.frame(y)
out = data.frame(y)
View(out)
qqplot(fricatives_tidy$cog)
qqplot(fricatives_tidy$cog)
qqplot(fricatives_tidy$cog)
qqPlot(fricatives_tidy$cog)
View(fricatives_desc)
View(fricatives_log)
fricatives_tidy_2 = fricatives_tidy %>%
filter(obs > 1, & obs < 19)
fricatives_tidy_2 = fricatives_tidy %>%
filter(obs > 1 & obs < 19)
View(fricatives_tidy_2)
fricatives_tidy_2 = fricatives_tidy %>%
filter(obs > 1 & obs < 20)
fricatives_s2 = fricatives_tidy %>%
filter(obs > 1 & obs < 20)
model2 = lm(fricatives_s2$cog ~ fricatives_s2$skewness)
summary(model2)
gvlma::gvlma(model2)
summary(model2)
x = cooks.distance(model2)
plot(x)
x = cooks.distance(model)
plot(x)
fricatives_s2 = fricatives_tidy %>%
filter(obs > 1 & obs < 20)
model = lm(fricatives_s$cog ~ fricatives_s$skewness)
model2 = lm(fricatives_s2$cog ~ fricatives_s2$skewness)
summary(model)
summary(model2)
x = cooks.distance(model)
plot(x)
library(readr)
library(openintro)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(e1071)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library("lawstat")
library("ggfortify")
library("lmtest")
library("DataCombine")
library("gvlma")
library("tidyverse")
fricatives <- read_csv("data_raw/fricatives.csv")
skewness(fricatives$s_cog)
skewness(fricatives$s_skewness)
skewness(fricatives$sh_cog)
skewness(fricatives$sh_skewness)
ggplot(data = fricatives, aes(x = s_cog, y = s_skewness)) + geom_point(color = "Steelblue3") + ggtitle("Eye-ball it graph: is there a linear relationship bewteen skewness and COG?") + xlab("Center of Gravity") + ylab("Skewness")
fricatives_tidy = fricatives %>%
pivot_longer(c(`s_cog`, `s_skewness`,`sh_cog`, `sh_skewness`), names_to = "type", values_to = "value") %>%
separate(type, into = c("phoneme", "measure"), sep = "_") %>%
pivot_wider(names_from = measure, values_from = value)
fricatives_tidy %>%
write.csv("./data_tidy/fricatives_tidy")
fricatives_desc = fricatives %>%
pivot_longer(c(`s_cog`, `s_skewness`,`sh_cog`, `sh_skewness`), names_to = "type", values_to = "value") %>%
separate(type, into = c("phoneme", "measure"), sep = "_") %>%
group_by(phoneme, measure) %>%
summarise(mean = mean(value), sd = sd(value))
fricatives_desc %>%
write.csv("./data_tidy/fricatives_desc")
knitr::kable(fricatives_desc, digits = 3)
```
fricatives_tidy %>%
ggplot(., aes(x = phoneme, y = cog)) + geom_boxplot(fill = "deepskyblue3") + xlab("Phoneme") + ggtitle("COG as a function of phoneme") + ylab("Center of Gravity")
autoplot(model)
fricatives_tidy %>%
ggplot(., aes(x = phoneme, y = skewness)) + stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3, color = "seagreen") + ggtitle("Skewness as a function of phoneme") + xlab("Skewness") + ylab("Phoneme")
```
fricatives_s = fricatives_tidy %>%
filter(phoneme == "s")
model = lm(fricatives_s$cog ~ fricatives_s$skewness)
summary(model)
```
mean_model1 = mean(model$residuals)
gvlma::gvlma(model)
x = cooks.distance(model)
plot(x)
fricatives_s2 = fricatives_s %>%
filter(obs > 1 & obs < 20)
model2 = lm(fricatives_s2$cog ~ fricatives_s2$skewness)
summary(model2)
mean_model2 = mean(model2$residuals)
tab_model(model, model2)
```
gvlma::gvlma(model2)
cor.test(fricatives_s2$skewness, model$residuals)
cor.test(fricatives_s$skewness, model$residuals)
lawstat::runs.test(model$residuals)
lawstat::runs.test(model$residuals)
lawstat::runs.test(model2$residuals)
acf(model$residuals)
acf(model$residuals)
acf(model2$residuals)
cor.test(fricatives_s$skewness, model$residuals)
cor.test(fricatives_s$skewness, model2$residuals)
cor.test(fricatives_s2$skewness, model2$residuals)
cor.test(fricatives_s$skewness, model$residuals)
cor.test(fricatives_s2$skewness, model2$residuals)
autoplot(model)
autoplot(model2)
acf(model$residuals)
```
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
options(scipen = 999)
library(tidyverse)
library(knitr)
library(kableExtra)
library(ds4ling)
library(xaringan)
library(patchwork)
library(sjPlot)
library(lmtest)
library(lawstat)
library(ggfortify)
library(DataCombine)
library(gvlma)
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Raw_Fricatives = read.csv("./data_raw/fricatives.csv")
Raw_Fricatives = read.csv("./data_raw/fricatives.csv")
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c("s_cog", "s_skewness", "sh_cog", "sh_skewness"), names_to = "class", values_to = "hz") %>%
separate("class", into = c("phoneme", "metric"), sep = "_") %>%
pivot_wider(names_from = "metric", values_from = "hz")
View(Raw_Fricatives)
View(Tidy_Fricatives)
View(Tidy_Fricatives)
View(Raw_Fricatives)
View(Tidy_Fricatives)
Tidy_Fricatives <- Tidy_Fricatives %>%
rename(., c("COG" = "cog"),
c("Phoneme" = "phoneme"),
c("Skewness" = "skewness"),
c("Observation" = "obs"))
write_csv(Tidy_Fricatives, "../data_tidy/tidy fricatives.csv")
Tidy_Fricatives <- Tidy_Fricatives %>%
rename(., c("COG" = "cog"),
c("Phoneme" = "phoneme"),
c("Skewness" = "skewness"),
c("Observation" = "obs"))
View(Tidy_Fricatives)
Descriptive_Fricatives <- Tidy_Fricatives %>%
group_by(Phoneme) %>%
summarize(Mean_cog = mean(COG), SD_cog = sd(COG), Mean_skewness = mean(Skewness), SD_skewness = sd(Skewness))
kable(Descriptive_Fricatives[1:5], caption = "Descriptive statistics for center of gravity and skewedness by phoneme (voiceless alveolar stop and voiceless prepalatal affricate)")
```
Tidy_Fricatives %>%
ggplot(aes(x = Phoneme, y = COG)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average center of gravity by trial", title = "Center of gravity by phoneme") + theme(plot.title = element_text(hjust = .5))
```
Tidy_Fricatives %>%
ggplot(aes(x = Phoneme, y = Skewness)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average skewness across trials", title = "Skewness by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
```
Tidy_Fricatives %>%
ggplot(aes(x = Phoneme, y = Skewness)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average skewness across trials", title = "Skewness by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
```
S_Model_Fricatives %>%
ggplot(aes(x = Skewness, y = COG)) +
geom_point() +
geom_smooth(method = lm) +
labs(x = "Skewness", y = "Center of gravity", title = "Center of gravity as a function of skewness for /s/") +
theme(plot.title = element_text(hjust = 0.5))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
options(scipen = 999)
library(tidyverse)
library(knitr)
library(kableExtra)
library(ds4ling)
library(xaringan)
library(patchwork)
library(sjPlot)
library(lmtest)
library(lawstat)
library(ggfortify)
library(DataCombine)
library(gvlma)
Raw_Fricatives = read.csv("./data_raw/fricatives.csv")
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c("s_cog", "s_skewness", "sh_cog", "sh_skewness"), names_to = "class", values_to = "hz") %>%
separate("class", into = c("phoneme", "metric"), sep = "_") %>%
pivot_wider(names_from = "metric", values_from = "hz")
Tidy_Fricatives <- Tidy_Fricatives %>%
rename(., c("COG" = "cog"),
c("Phoneme" = "phoneme"),
c("Skewness" = "skewness"),
c("Observation" = "obs"))
write_csv(Tidy_Fricatives, "./data_tidy/tidy fricatives.csv")
Descriptive_Fricatives <- Tidy_Fricatives %>%
group_by(Phoneme) %>%
summarize(Mean_cog = mean(COG), SD_cog = sd(COG), Mean_skewness = mean(Skewness), SD_skewness = sd(Skewness))
kable(Descriptive_Fricatives[1:5], caption = "Descriptive statistics for center of gravity and skewedness by phoneme (voiceless alveolar stop and voiceless prepalatal affricate)")
Tidy_Fricatives %>%
ggplot(aes(x = Phoneme, y = COG)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average center of gravity by trial", title = "Center of gravity by phoneme") + theme(plot.title = element_text(hjust = .5))
```
Tidy_Fricatives %>%
ggplot(aes(x = Phoneme, y = Skewness)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average skewness across trials", title = "Skewness by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
```
Tidy_Fricatives %>%
ggplot(aes(x = Phoneme, y = Skewness)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average skewness across trials", title = "Skewness by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
```
S_Model_Fricatives %>%
ggplot(aes(x = Skewness, y = COG)) +
geom_point() +
geom_smooth(method = lm) +
labs(x = "Skewness", y = "Center of gravity", title = "Center of gravity as a function of skewness for /s/") +
theme(plot.title = element_text(hjust = 0.5))
S_Model_Fricatives %>%
ggplot(aes(x = Skewness, y = COG)) +
geom_point() +
geom_smooth(method = lm) +
labs(x = "Skewness", y = "Center of gravity", title = "Center of gravity as a function of skewness for /s/") +
theme(plot.title = element_text(hjust = 0.5))
Tidy_Fricatives %>%
ggplot(aes(x = Phoneme, y = Skewness)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average skewness across trials", title = "Skewness by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
```
S_Model_Fricatives <- Tidy_Fricatives %>%
filter(., Phoneme == "s")
View(Raw_Fricatives)
View(S_Model_Fricatives)
View(Tidy_Fricatives)
S_Model_Fricatives %>%
ggplot(aes(x = Skewness, y = COG)) +
geom_point() +
geom_smooth(method = lm) +
labs(x = "Skewness", y = "Center of gravity", title = "Center of gravity as a function of skewness for /s/") +
theme(plot.title = element_text(hjust = 0.5))
```
tab_model(S_Model_Regression)
S_Model_Regression <- lm(COG ~ Skewness, data = S_Model_Fricatives)
tab_model(S_Model_Regression)
```
ds4ling::diagnosis(S_Model_Regression)
Cooks_Fricatives = cooks.distance(S_Model_Regression)
plot(Cooks_Fricatives)
```
gvlma::gvlma(S_Model_Regression)
More_Tidy_Fricatives = Tidy_Fricatives %>%
filter(., Observation > 1)
More_Tidy_Fricatives = Tidy_Fricatives %>%
filter(., Observation < 20)
More_Tidy_Fricatives = More_Tidy_Fricatives %>%
filter(Phoneme == "s")
S_Modified_Regression <- lm(COG ~ Skewness, data = More_Tidy_Fricatives)
View(More_Tidy_Fricatives)
More_Tidy_Fricatives = Tidy_Fricatives %>%
filter(., Observation > 1 & Observation < 20) %>%
filter(Phoneme == "s")
S_Modified_Regression <- lm(COG ~ Skewness, data = More_Tidy_Fricatives)
tab_model(S_Modified_Regression)
More_Tidy_Fricatives %>%
ggplot(aes(x = Skewness, y = COG)) +
geom_point() +
geom_smooth(method = lm) +
labs(x = "Skewness", y = "Center of gravity", title = "Center of Gravity as a Function of Skewness of /s/", caption = "Figure 5") +
theme(plot.title = element_text(hjust =0.5))
```
gvlma::gvlma(S_Modified_Regression)
library(readr)
library(openintro)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(e1071)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library("lawstat")
library("ggfortify")
library("lmtest")
library("DataCombine")
library("gvlma")
library("tidyverse")
# Some code that I would like to see in HUGE character
head(mtcars)
library(readr)
library(openintro)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(e1071)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library("lawstat")
library("ggfortify")
library("lmtest")
library("DataCombine")
library("gvlma")
library("tidyverse")
library(xaringanthemer)
install.packages("xaringanthemer")
library(readr)
library(openintro)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(e1071)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library("lawstat")
library("ggfortify")
library("lmtest")
library("DataCombine")
library("gvlma")
library("tidyverse")
library(xaringanthemer)
style_xaringan(header_color = "blue")
style_xaringan(header_color = 74ca66)
style_xaringan(header_color = #74ca66)
style_xaringan(header_color = "#74ca66")
library(showtext)
install.packages("showtext")
style_xaringan(header_color = "#74ca66")
style_xaringan(header_color = "#74ca66")
style_duo(primary_color = "#1F4257", secondary_color = "#F97B64")
```
style_duo(primary_color = "#1F4257", secondary_color = "#F97B64")
```
style_duo(primary_color = "#1F4257", secondary_color = "#F97B64")
```
